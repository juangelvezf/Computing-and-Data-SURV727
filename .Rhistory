head(angell_txt)
head(angell_stata)
angell_txt <- read.table("data\\angell.txt")
head(angell_txt)
View(angell_txt)
View(angell_stata)
angell_txt2<-tail(angell_txt, -5)
head(angell_txt2)
angell_small<- agell_stata %>%
select(2,3)
angell_small<- angell_stata %>%
select(2,3)
head(angell_small)
View(angell_small)
View(angell_stata)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(MASS)
head(Boston)
typeof(Boston)
class(Boston)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(MASS)
head(Boston)
typeof(Boston)
class(Boston)
View(Boston)
View(Boston)
nrow(subset(Boston, chas ==1))
nrow(subset(Boston, chas ==1))
summary(Boston$crim)
qplot(Boston$crim, xlab = "Crime", ylab="Suburbs" )
summary(Boston$crim)
hist(Boston$crim, xlab = "Crime", ylab="Suburbs" )
qplot(Boston$crim, xlab = "Crime", ylab="Suburbs" )
summary(Boston$crim)
summary(Boston$tax)
qplot(Boston$tax, xlab = "Tax", ylab="Suburbs" )
summary(Boston$tax)
summary(Boston$ptratio)
qplot(Boston$ptratio, xlab = "Pupil-teacher ratio", ylab="Suburbs" )
summary(Boston$ptratio)
boston2 <- Boston[ which(Boston$crim > 1), ]
View(boston2)
summary(boston2$ptratio)
names(Boston)
n-> 2
2 <- n
function.square <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
function.square
function.square(6)
function.square <- function(a) {
for(i in 1:1) {
b <- i^2
print(b)
}
}
function.square(6)
function.square <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
function.square <- function(a) {
for(i in a:a) {
b <- i^2
print(b)
}
}
function.square
function.square(6)
my_CI <- function(x, conf = 0.95) {
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI(2, 0.2)
function.square <- function(a) {
for(i in a:a) {
b <- sqrt(i)
print(b)
}
}
function.square(6)
my_CI <- function(x, conf = 0.95) {
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI <- function(x, conf = 0.95) {
my_CI (x, se)
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI(2, 0.2)
knitr::opts_chunk$set(echo = TRUE)
my_CI <- function(x, y) {
lower <- x - 1.96 * y
upper <- x + 1.96 * y
paste("The 95% CI upper bound of point estimate", x, "with standard error", y,
"is", upper,".", "The lower bound is", lower,".")
}
my_CI (2, 0.2)
knitr::opts_chunk$set(echo = TRUE)
function.square <- function(a) {
for(i) {
function.square(6)
function.square <- function(a) {
for(i) {
function.square <- function(a) {
for(i in a:a) {
b <- sqrt(i)
print(b)
}
}
function.square(6)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
View(df)
View(df)
df1<- df %>%
select() %>%
mutate( = na_if(, "-"))
View(df)
df1<- df %>%
mutate(
a   = na_if_in(a, ~ . < 0)
)
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
df1<- df %>%
mutate(
a   = na_if_in(a, ~ . < 0)
)
na_if_in(df, ~ . < 0)
library(dplyr)
df %>%
mutate(
a = na_if_in(a,  ~ . < 0)
)
is.na(df$a) <- df$a < 0
View(df)
is.na(df) <- df < 0
View(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
#function
is.na(df) <- df < 0
df
class(df)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
class(df)
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
class(df)
View(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df %>%
mutate(a = na_if(a, "NA!"))
View(df)
#function
df %>%
if (y <  0) {
"NA !"
}
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
typeof(A)
A <- c("2", "3", "4", "5", "6", "7", "8")
typeof(A)
B <- (1:10)
B
typeof(B)
B
B1<-replace(B,B==3,3.5)
B1
typeof(B1)
typeof(B1)
B
B1<-replace(B,B==3,3.5)
B1
B1<-replace(B,B==3,3.5)
B1
typeof(B1)
angell_stata <- read_dta("data/angell.dta")
head(angell_stata)
angell_txt2<-tail(angell_txt, -5)
angell_txt <- read.table("data\\angell.txt")
head(angell_txt)
angell_txt2<-tail(angell_txt, -5)
head(angell_txt2)
B
B1<-replace(B,3,3.5)
B1
typeof(B1)
B <- (1:10)
B
typeof(B)
B
B1<-replace(B,B==3,3.5)
B1
B<-replace(B,B==3,3.5)
B
typeof(B)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA <- function (x) {
x <- replace(x, x < 0, NA)
print(x)
}
into_NA(df)
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA <- function (x) {
x <- replace(x, x < 0, NA)
print(x)
}
class(df)
into_NA(df)
typeof(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
typeof(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA_ <- function (x) {
x <- replace(x, x < 0, "NA!")
print(x)
}
into_NA_(df)
rm(list=ls())
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
install.packages("MASS")
library(MASS)
head(Boston)
library(tidyverse)
library(gtrendsR)
library(tidyverse)
library(gtrendsR)
library(censusapi)
res <- gtrends(c("crime", "loans"), geo = "US-IL", time = "2016-01-01 2016-12-31", low_search_volume = TRUE)
plot(res)
head(res)
as_tibble(res)
is_tibble(res)
res1 <- as_tibble(res)
is_tibble(res)
res1 <- as_tibble(res)
head(res)
is_tibble(res::location)
is_tibble(as_tibble(res))
is_tibble(as_tibble(res$location))
res1 <- as_tibble(res$location)
res1$location
res1$location
head(res1)
View(res)
names(res)
is_tibble(as_tibble(res$interest_by_city))
res1 <- as_tibble(res$interest_by_city)
head(res1)
View(res)
names(res)
is_tibble(res)
is_tibble(as_tibble(res$interest_by_city))
res1 <- as_tibble(res$interest_by_city)
head(res1)
fivenum(res1$interest_by_city)
res1 %>%
fivenum(interest_by_city$keyword)
res1 %>%
fivenum(interest_by_city$keyword)
res1 %>%
fivenum(res1$keyword)
res1 %>%
fivenum(res1$keyword)
res1 %>% group_by(keyword) %>%
summarise(sd = sd(),
mean = mean(),
median=median())
View(res1)
res1 %>% group_by(keyword) %>%
summarise(sd = sd(),
mean = mean(),
median=median())
res1 %>% group_by(keyword) %>%
summarise(sd = sd(keyword),
mean = mean(keyword),
median=median(keyword))
res1 %>% group_by(keyword) %>%
summarise(sd = sd(keyword, na.rm = T),
mean = mean(keyword, na.rm = T),
median=median(keyword, na.rm = T))
mean(res1$keyword, na.rm = T)
res1 %>% group_by(keywords) %>%
summarise(RT = mean(RT, na.rm = T))
res1 %>% group_by(keyword) %>%
summarise(RT = mean(RT, na.rm = T))
res1 %>% group_by(keyword) %>%
summarise(crime = mean(crime, na.rm = T))
library(dplyr)
res1 %>%
summarise(mean = mean(keyword$crime, na.rm = TRUE),
sd = sd(keyword$crime, na.rm = TRUE))
res1 %>%
summarise(mean = mean(keyword, na.rm = TRUE),
sd = sd(keyword, na.rm = TRUE))
res1 %>%
group_by(keyword) %>%
summarise(hits_mean = mean(hits, na.rm = TRUE),
hits_sd = sd(hits, na.rm = TRUE))
res1 %>%
group_by(keyword) %>%
summarise(hits_mean = mean(hits, na.rm = TRUE),
hits_median = median(hits, na.rm = TRUE)
hits_sd = sd(hits, na.rm = TRUE))
res1 %>%
group_by(keyword) %>%
summarise(hits_mean = mean(hits, na.rm = TRUE),
hits_median = median(hits, na.rm = TRUE),
hits_sd = sd(hits, na.rm = TRUE))
View(res1)
library(dplyr)
library(tidyr)
is_tibble(res1)
is_tibble(res)
View(res1)
interest_city_w <- pivot_wider(res1,
names_from = keyword,
values_from = hits)
library(tidyr)
library(tidyr)
interest_city_w <- pivot_wider(res1,
names_from = keyword,
values_from = hits)
head(interest_city_w)
res2 <- pivot_wider(res1,
names_from = keyword,
values_from = hits)
head(res2)
head(res2)
res2 %>% loans(6)
library(tidyverse)
library(tidyverse)
library(gtrendsR)
library(censusapi)
library(tidyr)
library(dplyr)
res2 %>%
loans(6)
res2 %>% slice_max(loans, n = 6)
qplot(crime, loans, data=res2)
qplot(loans, crime, data=res2)
head(res1)
qplot(loans, crime, data = res2, geom = c("point", "smooth"))
qplot(loans, crime, data=res2)
qplot(loans, crime, data=res1)
2
qplot(loans, crime, data=res2)
cs_key <- "412c45f7f8f25f31dfa9121b48f369df61b2711c"
acs_il <- getCensus(name = "acs/acs5",
vintage = 2016,
vars = c("NAME", "B01001_001E", "B06002_001E", "B19013_001E", "B19301_001E"),
region = "place:*",
regionin = "state:17",
key = cs_key)
cs_key <- "412c45f7f8f25f31dfa9121b48f369df61b2711c"
cs_key <- "412c45f7f8f25f31dfa9121b48f369df61b2711c"
acs_il <- getCensus(name = "acs/acs5",
vintage = 2016,
vars = c("NAME", "B01001_001E", "B06002_001E", "B19013_001E", "B19301_001E"),
region = "place:*",
regionin = "state:17",
key = cs_key)
acs_il <- getCensus(name = "acs/acs5",
vintage = 2016,
vars = c("NAME", "B01001_001E", "B06002_001E", "B19013_001E", "B19301_001E"),
region = "place:*",
regionin = "state:17",
key = cs_key)
head(acs_il)
cs_key <- "412c45f7f8f25f31dfa9121b48f369df61b2711c"
acs_il <- getCensus(name = "acs/acs5",
vintage = 2016,
vars = c("NAME", "B01001_001E", "B06002_001E", "B19013_001E", "B19301_001E"),
region = "place:*",
regionin = "state:17",
key = "412c45f7f8f25f31dfa9121b48f369df61b2711c")
head(acs_il)
acs_il[acs_il == -666666666] <- NA
acs_il <-
acs_il %>%
rename(pop = B01001_001E, age = B06002_001E, hh_income = B19013_001E, income = B19301_001E)
acs_il %>%
slice_max(NAME)
acs_il %>%
slice_max(NAME, n = 6)
acs_il2 <- acs_il %>% separate(NAME, c('location', 'state'))
print(" Data frame after splitting: ")
acs_il2
acs_il2 <- acs_il %>% separate(NAME, c('location', 'NAME'))
print(" Data frame after splitting: ")
acs_il2
acs_il2 %>%
slice_max(NAME, n = 6)
acs_il2
head(acs_il2)
acs_il2 %>%
slice_max(location, n = 6)
