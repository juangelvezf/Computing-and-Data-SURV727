# setwd("-"
setwd("C:/Users/usuario/Dropbox/Fall 2022/Computing and data/Assignment 1")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
packages = c("tidyverse","readxl","ggplot2")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
summary(cars)
type(cars)
type(cars$speed)
packages = c("tidyverse","readxl","ggplot2")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
type(cars$speed)
type(pressure)
?type
?isinstance
?instance
?typeof
?type
A <- c("2", "3", "4", "5", "6", "7", "8")
type(A)
typeof(A)
?as.vector
as.vector(A)
typeof(A)
?as.integer
s.integer(A)
as.integer(A)
typeof(A)
A <- c("2", "3", "4", "5", "6", "7", "8")
typeof(A)
A1 <- as.integer(A)
A1
typeof(A1)
is.integer(A1)
B <- (1:10)
B
C<- as.double(B)
C
typeof(B)
typeof(C)
B
replace(B,B==3,3.5)
B
replace(B,B==3,3.5)
B
B1<-replace(B,B==3,3.5)
B1
```{r 7, echo=TRUE}
typeof(B1)
typeof(B)
?double
knitr::opts_chunk$set(echo = TRUE)
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
angell_stata <- read_dta("Assignment 1/data/angell.dta")
angell_stata <- read_dta("data/angell.dta")
head(angell_stata)
angell_txt <- read.csv("C:/Users/usuario/Dropbox/Fall 2022/Computing-and-Data-SURV727/Assignment 1/data/angell.txt", sep="")
View(angell_txt)
angell_txt <- read.delim("data/angell.txt")
?Deprecated
angell_txt <- rio::import(here::here("data","angell.txt"))
angell_txt <- rio::import(here::here("data","angell.txt"))
angell_txt <- read.table("data\\angell.txt", header = TRUE)
View(angell_txt)
View(angell_stata)
head(angell_txt)
head(angell_stata)
angell_txt <- read.table("data\\angell.txt")
head(angell_txt)
View(angell_txt)
View(angell_stata)
angell_txt2<-tail(angell_txt, -5)
head(angell_txt2)
angell_small<- agell_stata %>%
select(2,3)
angell_small<- angell_stata %>%
select(2,3)
head(angell_small)
View(angell_small)
View(angell_stata)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(MASS)
head(Boston)
typeof(Boston)
class(Boston)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(MASS)
head(Boston)
typeof(Boston)
class(Boston)
View(Boston)
View(Boston)
nrow(subset(Boston, chas ==1))
nrow(subset(Boston, chas ==1))
summary(Boston$crim)
qplot(Boston$crim, xlab = "Crime", ylab="Suburbs" )
summary(Boston$crim)
hist(Boston$crim, xlab = "Crime", ylab="Suburbs" )
qplot(Boston$crim, xlab = "Crime", ylab="Suburbs" )
summary(Boston$crim)
summary(Boston$tax)
qplot(Boston$tax, xlab = "Tax", ylab="Suburbs" )
summary(Boston$tax)
summary(Boston$ptratio)
qplot(Boston$ptratio, xlab = "Pupil-teacher ratio", ylab="Suburbs" )
summary(Boston$ptratio)
boston2 <- Boston[ which(Boston$crim > 1), ]
View(boston2)
summary(boston2$ptratio)
names(Boston)
n-> 2
2 <- n
function.square <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
function.square
function.square(6)
function.square <- function(a) {
for(i in 1:1) {
b <- i^2
print(b)
}
}
function.square(6)
function.square <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
function.square <- function(a) {
for(i in a:a) {
b <- i^2
print(b)
}
}
function.square
function.square(6)
my_CI <- function(x, conf = 0.95) {
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI(2, 0.2)
function.square <- function(a) {
for(i in a:a) {
b <- sqrt(i)
print(b)
}
}
function.square(6)
my_CI <- function(x, conf = 0.95) {
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI <- function(x, conf = 0.95) {
my_CI (x, se)
se <- sd(x) / sqrt(length(x))
alpha <- 1 - conf
mean(x) + se * qnorm(c(alpha / 2, 1 - alpha / 2))
}
my_CI(2, 0.2)
knitr::opts_chunk$set(echo = TRUE)
my_CI <- function(x, y) {
lower <- x - 1.96 * y
upper <- x + 1.96 * y
paste("The 95% CI upper bound of point estimate", x, "with standard error", y,
"is", upper,".", "The lower bound is", lower,".")
}
my_CI (2, 0.2)
knitr::opts_chunk$set(echo = TRUE)
function.square <- function(a) {
for(i) {
function.square(6)
function.square <- function(a) {
for(i) {
function.square <- function(a) {
for(i in a:a) {
b <- sqrt(i)
print(b)
}
}
function.square(6)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
View(df)
View(df)
df1<- df %>%
select() %>%
mutate( = na_if(, "-"))
View(df)
df1<- df %>%
mutate(
a   = na_if_in(a, ~ . < 0)
)
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
df1<- df %>%
mutate(
a   = na_if_in(a, ~ . < 0)
)
na_if_in(df, ~ . < 0)
library(dplyr)
df %>%
mutate(
a = na_if_in(a,  ~ . < 0)
)
is.na(df$a) <- df$a < 0
View(df)
is.na(df) <- df < 0
View(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
#function
is.na(df) <- df < 0
df
class(df)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
class(df)
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
class(df)
View(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df %>%
mutate(a = na_if(a, "NA!"))
View(df)
#function
df %>%
if (y <  0) {
"NA !"
}
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
df= ifelse(df < 0, NA_real_, df)
df
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
is.na(df) <- df < 0
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
typeof(A)
A <- c("2", "3", "4", "5", "6", "7", "8")
typeof(A)
B <- (1:10)
B
typeof(B)
B
B1<-replace(B,B==3,3.5)
B1
typeof(B1)
typeof(B1)
B
B1<-replace(B,B==3,3.5)
B1
B1<-replace(B,B==3,3.5)
B1
typeof(B1)
angell_stata <- read_dta("data/angell.dta")
head(angell_stata)
angell_txt2<-tail(angell_txt, -5)
angell_txt <- read.table("data\\angell.txt")
head(angell_txt)
angell_txt2<-tail(angell_txt, -5)
head(angell_txt2)
B
B1<-replace(B,3,3.5)
B1
typeof(B1)
B <- (1:10)
B
typeof(B)
B
B1<-replace(B,B==3,3.5)
B1
B<-replace(B,B==3,3.5)
B
typeof(B)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA <- function (x) {
x <- replace(x, x < 0, NA)
print(x)
}
into_NA(df)
class(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA <- function (x) {
x <- replace(x, x < 0, NA)
print(x)
}
class(df)
into_NA(df)
typeof(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
typeof(df)
set.seed(1002)
df <- data.frame(replicate(10, sample(c(1:10, c(-99,-98,-5)), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
class(df)
#function
into_NA_ <- function (x) {
x <- replace(x, x < 0, "NA!")
print(x)
}
into_NA_(df)
rm(list=ls())
packages = c("tidyverse","readxl","ggplot2","haven")
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}})
install.packages("MASS")
library(MASS)
head(Boston)
